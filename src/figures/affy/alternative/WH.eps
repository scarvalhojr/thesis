%!PS-Adobe-2.0 EPSF-2.0
%%Title: WH.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Feb 19 17:20:21 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 489 276
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times) findfont 180 scalefont setfont
1.000 UL
LTb
1026 540 M
63 0 V
stroke
918 540 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 0)]
] -60.0 MRshow
grestore
1.000 UL
LTb
1026 635 M
31 0 V
-31 94 R
31 0 V
-31 95 R
31 0 V
-31 94 R
31 0 V
-31 95 R
63 0 V
stroke
918 1013 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 0.05)]
] -60.0 MRshow
grestore
1.000 UL
LTb
1026 1107 M
31 0 V
-31 95 R
31 0 V
-31 94 R
31 0 V
-31 95 R
31 0 V
-31 94 R
63 0 V
stroke
918 1485 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 0.1)]
] -60.0 MRshow
grestore
1.000 UL
LTb
1026 1580 M
31 0 V
-31 94 R
31 0 V
-31 95 R
31 0 V
-31 94 R
31 0 V
-31 95 R
63 0 V
stroke
918 1958 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 0.15)]
] -60.0 MRshow
grestore
1.000 UL
LTb
1026 2052 M
31 0 V
-31 95 R
31 0 V
-31 94 R
31 0 V
-31 95 R
31 0 V
-31 94 R
63 0 V
stroke
918 2430 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 0.2)]
] -60.0 MRshow
grestore
1.000 UL
LTb
1026 2525 M
31 0 V
-31 94 R
31 0 V
-31 95 R
31 0 V
-31 94 R
31 0 V
-31 95 R
63 0 V
stroke
918 2903 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 0.25)]
] -60.0 MRshow
grestore
1.000 UL
LTb
1026 2997 M
31 0 V
-31 95 R
31 0 V
-31 94 R
31 0 V
-31 95 R
31 0 V
-31 94 R
63 0 V
stroke
918 3375 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 0.3)]
] -60.0 MRshow
grestore
1.000 UL
LTb
1026 3469 M
31 0 V
-31 95 R
31 0 V
-31 95 R
31 0 V
-31 94 R
31 0 V
-31 94 R
63 0 V
stroke
918 3847 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 0.35)]
] -60.0 MRshow
grestore
1.000 UL
LTb
1026 3942 M
31 0 V
-31 94 R
31 0 V
-31 95 R
31 0 V
-31 95 R
31 0 V
-31 94 R
63 0 V
stroke
918 4320 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 0.4)]
] -60.0 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
1026 540 M
0 3780 V
1.000 UL
LTb
1026 540 M
0 63 V
stroke
1026 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 0)]
] -60.0 MCshow
grestore
1.000 UL
LTb
1125 540 M
0 31 V
100 -31 R
0 31 V
99 -31 R
0 31 V
99 -31 R
0 31 V
1.000 UL
LTa
1523 540 M
0 3780 V
1.000 UL
LTb
1523 540 M
0 63 V
stroke
1523 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 5)]
] -60.0 MCshow
grestore
1.000 UL
LTb
1622 540 M
0 31 V
100 -31 R
0 31 V
99 -31 R
0 31 V
99 -31 R
0 31 V
1.000 UL
LTa
2020 540 M
0 3780 V
1.000 UL
LTb
2020 540 M
0 63 V
stroke
2020 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 10)]
] -60.0 MCshow
grestore
1.000 UL
LTb
2119 540 M
0 31 V
99 -31 R
0 31 V
100 -31 R
0 31 V
99 -31 R
0 31 V
1.000 UL
LTa
2516 540 M
0 3780 V
1.000 UL
LTb
2516 540 M
0 63 V
stroke
2516 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 15)]
] -60.0 MCshow
grestore
1.000 UL
LTb
2616 540 M
0 31 V
99 -31 R
0 31 V
99 -31 R
0 31 V
100 -31 R
0 31 V
1.000 UL
LTa
3013 540 M
0 3780 V
1.000 UL
LTb
3013 540 M
0 63 V
stroke
3013 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 20)]
] -60.0 MCshow
grestore
1.000 UL
LTb
3113 540 M
0 31 V
99 -31 R
0 31 V
99 -31 R
0 31 V
100 -31 R
0 31 V
1.000 UL
LTa
3510 540 M
0 3780 V
1.000 UL
LTb
3510 540 M
0 63 V
stroke
3510 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 25)]
] -60.0 MCshow
grestore
1.000 UL
LTb
3609 540 M
0 31 V
100 -31 R
0 31 V
99 -31 R
0 31 V
99 -31 R
0 31 V
1.000 UL
LTa
4007 540 M
0 3780 V
1.000 UL
LTb
4007 540 M
0 63 V
stroke
4007 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 30)]
] -60.0 MCshow
grestore
1.000 UL
LTb
4106 540 M
0 31 V
100 -31 R
0 31 V
99 -31 R
0 31 V
99 -31 R
0 31 V
1.000 UL
LTa
4504 540 M
0 3780 V
1.000 UL
LTb
4504 540 M
0 63 V
stroke
4504 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 35)]
] -60.0 MCshow
grestore
1.000 UL
LTb
4603 540 M
0 31 V
99 -31 R
0 31 V
100 -31 R
0 31 V
99 -31 R
0 31 V
1.000 UL
LTa
5000 540 M
0 3780 V
1.000 UL
LTb
5000 540 M
0 63 V
stroke
5000 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 40)]
] -60.0 MCshow
grestore
1.000 UL
LTb
5100 540 M
0 31 V
99 -31 R
0 31 V
99 -31 R
0 31 V
100 -31 R
0 31 V
1.000 UL
LTa
5497 540 M
0 3780 V
1.000 UL
LTb
5497 540 M
0 63 V
stroke
5497 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 45)]
] -60.0 MCshow
grestore
1.000 UL
LTb
5597 540 M
0 31 V
99 -31 R
0 31 V
99 -31 R
0 31 V
100 -31 R
0 31 V
1.000 UL
LTa
5994 540 M
0 3780 V
1.000 UL
LTb
5994 540 M
0 63 V
stroke
5994 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 50)]
] -60.0 MCshow
grestore
1.000 UL
LTb
6093 540 M
0 31 V
100 -31 R
0 31 V
99 -31 R
0 31 V
99 -31 R
0 31 V
1.000 UL
LTa
6491 540 M
0 3780 V
1.000 UL
LTb
6491 540 M
0 63 V
stroke
6491 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 55)]
] -60.0 MCshow
grestore
1.000 UL
LTb
6590 540 M
0 31 V
100 -31 R
0 31 V
99 -31 R
0 31 V
99 -31 R
0 31 V
1.000 UL
LTa
6988 540 M
0 3780 V
1.000 UL
LTb
6988 540 M
0 63 V
stroke
6988 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 60)]
] -60.0 MCshow
grestore
1.000 UL
LTb
7087 540 M
0 31 V
99 -31 R
0 31 V
100 -31 R
0 31 V
99 -31 R
0 31 V
1.000 UL
LTa
7484 540 M
0 3780 V
1.000 UL
LTb
7484 540 M
0 63 V
stroke
7484 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 65)]
] -60.0 MCshow
grestore
1.000 UL
LTb
7584 540 M
0 31 V
99 -31 R
0 31 V
99 -31 R
0 31 V
100 -31 R
0 31 V
1.000 UL
LTa
7981 540 M
0 3780 V
1.000 UL
LTb
7981 540 M
0 63 V
stroke
7981 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 70)]
] -60.0 MCshow
grestore
1.000 UL
LTb
8081 540 M
0 31 V
99 -31 R
0 31 V
99 -31 R
0 31 V
100 -31 R
0 31 V
1.000 UL
LTb
1026 540 M
7452 0 V
0 3780 V
-7452 0 V
0 -3780 V
LTb
180 2430 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times) 180.0 0.0 true true 0 (Normalized border length)]
] -60.0 MCshow
grestore
grestore
LTb
4752 90 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 (Masking step)]
] -60.0 MCshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
1125 558 Pls
1225 568 Pls
1324 589 Pls
1423 614 Pls
1523 667 Pls
1622 750 Pls
1722 881 Pls
1821 1051 Pls
1920 1318 Pls
2020 1579 Pls
2119 1889 Pls
2218 2037 Pls
2318 2285 Pls
2417 2410 Pls
2516 2539 Pls
2616 2481 Pls
2715 2597 Pls
2814 2613 Pls
2914 2658 Pls
3013 2577 Pls
3113 2669 Pls
3212 2678 Pls
3311 2737 Pls
3411 2741 Pls
3510 2875 Pls
3609 2902 Pls
3709 2980 Pls
3808 3191 Pls
3907 3328 Pls
4007 3227 Pls
4106 3274 Pls
4206 3541 Pls
4305 3558 Pls
4404 3275 Pls
4504 3269 Pls
4603 3282 Pls
4702 3249 Pls
4802 3046 Pls
4901 3065 Pls
5000 2937 Pls
5100 2971 Pls
5199 2947 Pls
5298 2991 Pls
5398 2855 Pls
5497 2921 Pls
5597 2944 Pls
5696 2985 Pls
5795 2851 Pls
5895 2920 Pls
5994 2928 Pls
6093 2960 Pls
6193 2852 Pls
6292 2902 Pls
6391 2868 Pls
6491 2851 Pls
6590 2819 Pls
6690 2788 Pls
6789 2625 Pls
6888 2538 Pls
6988 2581 Pls
7087 2437 Pls
7186 2103 Pls
7286 1936 Pls
7385 2013 Pls
7484 1779 Pls
7584 1407 Pls
7683 1250 Pls
7782 1287 Pls
7882 1105 Pls
7981 879 Pls
8081 609 Pls
8180 613 Pls
8279 588 Pls
8379 562 Pls
1.000 UP
1.000 UL
LT1
1125 558 Crs
1225 568 Crs
1324 589 Crs
1423 614 Crs
1523 666 Crs
1622 750 Crs
1722 881 Crs
1821 1051 Crs
1920 1318 Crs
2020 1578 Crs
2119 1887 Crs
2218 2035 Crs
2318 2282 Crs
2417 2406 Crs
2516 2535 Crs
2616 2476 Crs
2715 2591 Crs
2814 2605 Crs
2914 2647 Crs
3013 2563 Crs
3113 2651 Crs
3212 2650 Crs
3311 2705 Crs
3411 2683 Crs
3510 2812 Crs
3609 2805 Crs
3709 2873 Crs
3808 3027 Crs
3907 3181 Crs
4007 3006 Crs
4106 3061 Crs
4206 3305 Crs
4305 3358 Crs
4404 3015 Crs
4504 3026 Crs
4603 3071 Crs
4702 3041 Crs
4802 2800 Crs
4901 2796 Crs
5000 2705 Crs
5100 2724 Crs
5199 2671 Crs
5298 2684 Crs
5398 2587 Crs
5497 2651 Crs
5597 2649 Crs
5696 2665 Crs
5795 2559 Crs
5895 2637 Crs
5994 2626 Crs
6093 2642 Crs
6193 2546 Crs
6292 2596 Crs
6391 2574 Crs
6491 2562 Crs
6590 2513 Crs
6690 2522 Crs
6789 2414 Crs
6888 2361 Crs
6988 2384 Crs
7087 2300 Crs
7186 2055 Crs
7286 1931 Crs
7385 2011 Crs
7484 1820 Crs
7584 1488 Crs
7683 1356 Crs
7782 1409 Crs
7882 1218 Crs
7981 975 Crs
8081 718 Crs
8180 719 Crs
8279 666 Crs
8379 604 Crs
1.000 UP
1.000 UL
LT2
1125 564 Box
1225 605 Box
1324 662 Box
1423 648 Box
1523 800 Box
1622 1037 Box
1722 1251 Box
1821 1175 Box
1920 1548 Box
2020 1911 Box
2119 2079 Box
2218 1936 Box
2318 2162 Box
2417 2265 Box
2516 2326 Box
2616 2203 Box
2715 2308 Box
2814 2284 Box
2914 2324 Box
3013 2229 Box
3113 2324 Box
3212 2296 Box
3311 2360 Box
3411 2290 Box
3510 2397 Box
3609 2409 Box
3709 2461 Box
3808 2527 Box
3907 2634 Box
4007 2617 Box
4106 2633 Box
4206 2863 Box
4305 2927 Box
4404 2738 Box
4504 2743 Box
4603 2945 Box
4702 2971 Box
4802 2614 Box
4901 2650 Box
5000 2661 Box
5100 2690 Box
5199 2415 Box
5298 2462 Box
5398 2346 Box
5497 2415 Box
5597 2297 Box
5696 2306 Box
5795 2194 Box
5895 2288 Box
5994 2238 Box
6093 2255 Box
6193 2164 Box
6292 2245 Box
6391 2218 Box
6491 2239 Box
6590 2148 Box
6690 2224 Box
6789 2207 Box
6888 2221 Box
6988 2141 Box
7087 2219 Box
7186 2201 Box
7286 2216 Box
7385 2156 Box
7484 2214 Box
7584 2177 Box
7683 2188 Box
7782 2239 Box
7882 2196 Box
7981 2044 Box
8081 2077 Box
8180 2183 Box
8279 1949 Box
8379 1510 Box
1.000 UP
1.000 UL
LT3
1125 1007 Circle
1225 1506 Circle
1324 1785 Circle
1423 1784 Circle
1523 2238 Circle
1622 2604 Circle
1722 2742 Circle
1821 2723 Circle
1920 2963 Circle
2020 3220 Circle
2119 3302 Circle
2218 3137 Circle
2318 3343 Circle
2417 3389 Circle
2516 3444 Circle
2616 3180 Circle
2715 3368 Circle
2814 3272 Circle
2914 3249 Circle
3013 3035 Circle
3113 3117 Circle
3212 2993 Circle
3311 2920 Circle
3411 2701 Circle
3510 2675 Circle
3609 2552 Circle
3709 2400 Circle
3808 2303 Circle
3907 2175 Circle
4007 2041 Circle
4106 1926 Circle
4206 1876 Circle
4305 1744 Circle
4404 1642 Circle
4504 1568 Circle
4603 1607 Circle
4702 1559 Circle
4802 1530 Circle
4901 1541 Circle
5000 1647 Circle
5100 1654 Circle
5199 1745 Circle
5298 1829 Circle
5398 1960 Circle
5497 2053 Circle
5597 2174 Circle
5696 2266 Circle
5795 2413 Circle
5895 2529 Circle
5994 2669 Circle
6093 2778 Circle
6193 2807 Circle
6292 3008 Circle
6391 3111 Circle
6491 3182 Circle
6590 3170 Circle
6690 3383 Circle
6789 3426 Circle
6888 3505 Circle
6988 3436 Circle
7087 3642 Circle
7186 3624 Circle
7286 3712 Circle
7385 3614 Circle
7484 3832 Circle
7584 3760 Circle
7683 3717 Circle
7782 3937 Circle
7882 3855 Circle
7981 3502 Circle
8081 3745 Circle
8180 4043 Circle
8279 3431 Circle
8379 2371 Circle
1.000 UL
LTb
1026 540 M
7452 0 V
0 3780 V
-7452 0 V
0 -3780 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times
