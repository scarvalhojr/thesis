%!PS-Adobe-2.0 EPSF-2.0
%%Title: bl.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Jan 18 23:57:32 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 489 276
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times) findfont 180 scalefont setfont
1.000 UL
LTb
1026 540 M
63 0 V
stroke
918 540 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 0)]
] -60.0 MRshow
grestore
1.000 UL
LTb
1026 624 M
31 0 V
-31 84 R
31 0 V
-31 84 R
31 0 V
-31 84 R
31 0 V
-31 84 R
63 0 V
stroke
918 960 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 0.05)]
] -60.0 MRshow
grestore
1.000 UL
LTb
1026 1044 M
31 0 V
-31 84 R
31 0 V
-31 84 R
31 0 V
-31 84 R
31 0 V
-31 84 R
63 0 V
stroke
918 1380 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 0.1)]
] -60.0 MRshow
grestore
1.000 UL
LTb
1026 1464 M
31 0 V
-31 84 R
31 0 V
-31 84 R
31 0 V
-31 84 R
31 0 V
-31 84 R
63 0 V
stroke
918 1800 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 0.15)]
] -60.0 MRshow
grestore
1.000 UL
LTb
1026 1884 M
31 0 V
-31 84 R
31 0 V
-31 84 R
31 0 V
-31 84 R
31 0 V
-31 84 R
63 0 V
stroke
918 2220 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 0.2)]
] -60.0 MRshow
grestore
1.000 UL
LTb
1026 2304 M
31 0 V
-31 84 R
31 0 V
-31 84 R
31 0 V
-31 84 R
31 0 V
-31 84 R
63 0 V
stroke
918 2640 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 0.25)]
] -60.0 MRshow
grestore
1.000 UL
LTb
1026 2724 M
31 0 V
-31 84 R
31 0 V
-31 84 R
31 0 V
-31 84 R
31 0 V
-31 84 R
63 0 V
stroke
918 3060 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 0.3)]
] -60.0 MRshow
grestore
1.000 UL
LTb
1026 3144 M
31 0 V
-31 84 R
31 0 V
-31 84 R
31 0 V
-31 84 R
31 0 V
-31 84 R
63 0 V
stroke
918 3480 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 0.35)]
] -60.0 MRshow
grestore
1.000 UL
LTb
1026 3564 M
31 0 V
-31 84 R
31 0 V
-31 84 R
31 0 V
-31 84 R
31 0 V
-31 84 R
63 0 V
stroke
918 3900 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 0.4)]
] -60.0 MRshow
grestore
1.000 UL
LTb
1026 3984 M
31 0 V
-31 84 R
31 0 V
-31 84 R
31 0 V
-31 84 R
31 0 V
-31 84 R
63 0 V
stroke
918 4320 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 0.45)]
] -60.0 MRshow
grestore
1.000 UL
LTb
1026 540 M
0 63 V
stroke
1026 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 0)]
] -60.0 MCshow
grestore
1.000 UL
LTb
1468 540 M
0 63 V
stroke
1468 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 5)]
] -60.0 MCshow
grestore
1.000 UL
LTb
1909 540 M
0 63 V
stroke
1909 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 10)]
] -60.0 MCshow
grestore
1.000 UL
LTb
2351 540 M
0 63 V
stroke
2351 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 15)]
] -60.0 MCshow
grestore
1.000 UL
LTb
2792 540 M
0 63 V
stroke
2792 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 20)]
] -60.0 MCshow
grestore
1.000 UL
LTb
3234 540 M
0 63 V
stroke
3234 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 25)]
] -60.0 MCshow
grestore
1.000 UL
LTb
3676 540 M
0 63 V
stroke
3676 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 30)]
] -60.0 MCshow
grestore
1.000 UL
LTb
4117 540 M
0 63 V
stroke
4117 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 35)]
] -60.0 MCshow
grestore
1.000 UL
LTb
4559 540 M
0 63 V
stroke
4559 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 40)]
] -60.0 MCshow
grestore
1.000 UL
LTb
5000 540 M
0 63 V
stroke
5000 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 45)]
] -60.0 MCshow
grestore
1.000 UL
LTb
5442 540 M
0 63 V
stroke
5442 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 50)]
] -60.0 MCshow
grestore
1.000 UL
LTb
5884 540 M
0 63 V
stroke
5884 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 55)]
] -60.0 MCshow
grestore
1.000 UL
LTb
6325 540 M
0 63 V
stroke
6325 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 60)]
] -60.0 MCshow
grestore
1.000 UL
LTb
6767 540 M
0 63 V
stroke
6767 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 65)]
] -60.0 MCshow
grestore
1.000 UL
LTb
7208 540 M
0 63 V
stroke
7208 360 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 70)]
] -60.0 MCshow
grestore
1.000 UL
LTb
7650 540 M
-63 0 V
stroke
7758 540 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 0)]
] -60.0 MLshow
grestore
1.000 UL
LTb
7650 685 M
-31 0 V
31 146 R
-31 0 V
31 145 R
-31 0 V
31 146 R
-31 0 V
31 145 R
-63 0 V
stroke
7758 1267 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 5000)]
] -60.0 MLshow
grestore
1.000 UL
LTb
7650 1412 M
-31 0 V
31 146 R
-31 0 V
31 145 R
-31 0 V
31 145 R
-31 0 V
31 146 R
-63 0 V
stroke
7758 1994 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 10000)]
] -60.0 MLshow
grestore
1.000 UL
LTb
7650 2139 M
-31 0 V
31 146 R
-31 0 V
31 145 R
-31 0 V
31 145 R
-31 0 V
31 146 R
-63 0 V
stroke
7758 2721 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 15000)]
] -60.0 MLshow
grestore
1.000 UL
LTb
7650 2866 M
-31 0 V
31 146 R
-31 0 V
31 145 R
-31 0 V
31 145 R
-31 0 V
31 146 R
-63 0 V
stroke
7758 3448 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 20000)]
] -60.0 MLshow
grestore
1.000 UL
LTb
7650 3593 M
-31 0 V
31 145 R
-31 0 V
31 146 R
-31 0 V
31 145 R
-31 0 V
31 146 R
-63 0 V
stroke
7758 4175 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 ( 25000)]
] -60.0 MLshow
grestore
1.000 UL
LTb
7650 4320 M
-31 0 V
1.000 UL
LTb
1026 540 M
6624 0 V
0 3780 V
-6624 0 V
0 -3780 V
LTb
180 2430 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times) 180.0 0.0 true true 0 (Normalized border length)]
] -60.0 MCshow
grestore
grestore
LTb
8603 2430 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times) 180.0 0.0 true true 0 (Number of synthesized middle bases)]
] -60.0 MCshow
grestore
grestore
LTb
4338 90 M
gsave 0 setgray
[ [(Times) 180.0 0.0 true true 0 (Masking step)]
] -60.0 MCshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
1114 953 Crs
1203 1388 Crs
1291 1911 Crs
1379 1700 Crs
1468 2250 Crs
1556 2630 Crs
1644 2780 Crs
1733 2759 Crs
1821 2826 Crs
1909 2849 Crs
1998 2855 Crs
2086 2847 Crs
2174 2866 Crs
2262 2855 Crs
2351 2872 Crs
2439 2861 Crs
2527 2876 Crs
2616 2863 Crs
2704 2867 Crs
2792 2873 Crs
2881 2859 Crs
2969 2854 Crs
3057 2861 Crs
3146 2874 Crs
3234 2882 Crs
3322 2865 Crs
3411 2861 Crs
3499 2864 Crs
3587 2857 Crs
3676 2853 Crs
3764 2860 Crs
3852 2870 Crs
3941 2857 Crs
4029 2862 Crs
4117 2866 Crs
4206 2869 Crs
4294 2863 Crs
4382 2873 Crs
4470 2880 Crs
4559 2864 Crs
4647 2863 Crs
4735 2867 Crs
4824 2861 Crs
4912 2869 Crs
5000 2869 Crs
5089 2863 Crs
5177 2846 Crs
5265 2876 Crs
5354 2859 Crs
5442 2867 Crs
5530 2871 Crs
5619 2876 Crs
5707 2874 Crs
5795 2868 Crs
5884 2861 Crs
5972 2829 Crs
6060 2821 Crs
6149 2778 Crs
6237 2710 Crs
6325 2637 Crs
6414 2540 Crs
6502 2400 Crs
6590 2247 Crs
6678 2088 Crs
6767 1910 Crs
6855 1718 Crs
6943 1511 Crs
7032 1342 Crs
7120 1168 Crs
7208 1026 Crs
7297 893 Crs
7385 777 Crs
7473 705 Crs
7562 646 Crs
1.000 UP
1.000 UL
LT1
1114 2394 Box
1203 2998 Box
1291 3505 Box
1379 3508 Box
1468 3809 Box
1556 4089 Box
1644 4188 Box
1733 4197 Box
1821 4151 Box
1909 4136 Box
1998 4090 Box
2086 4031 Box
2174 3951 Box
2262 3901 Box
2351 3808 Box
2439 3700 Box
2527 3579 Box
2616 3443 Box
2704 3281 Box
2792 3075 Box
2881 2864 Box
2969 2648 Box
3057 2401 Box
3146 2188 Box
3234 2013 Box
3322 1817 Box
3411 1695 Box
3499 1547 Box
3587 1446 Box
3676 1371 Box
3764 1339 Box
3852 1335 Box
3941 1352 Box
4029 1381 Box
4117 1477 Box
4206 1567 Box
4294 1724 Box
4382 1865 Box
4470 2030 Box
4559 2219 Box
4647 2380 Box
4735 2586 Box
4824 2794 Box
4912 2955 Box
5000 3136 Box
5089 3315 Box
5177 3456 Box
5265 3601 Box
5354 3702 Box
5442 3790 Box
5530 3867 Box
5619 3941 Box
5707 3995 Box
5795 4000 Box
5884 4018 Box
5972 3997 Box
6060 3955 Box
6149 3862 Box
6237 3754 Box
6325 3625 Box
6414 3430 Box
6502 3199 Box
6590 2962 Box
6678 2680 Box
6767 2411 Box
6855 2110 Box
6943 1825 Box
7032 1566 Box
7120 1334 Box
7208 1142 Box
7297 964 Box
7385 818 Box
7473 730 Box
7562 659 Box
1.000 UL
LT2
1070 540 M
88 0 V
-88 0 V
88 0 R
89 0 V
-89 0 V
89 0 R
88 0 V
-88 0 V
88 0 R
88 0 V
-88 0 V
88 0 R
89 0 V
-89 0 V
89 0 R
88 0 V
-88 0 V
88 0 R
88 0 V
-88 0 V
88 0 R
89 0 V
-89 0 V
89 0 R
88 0 V
-88 0 V
88 0 R
88 0 V
-88 0 V
88 0 R
89 0 V
-89 0 V
89 0 R
88 0 V
-88 0 V
88 0 R
88 0 V
-88 0 V
88 0 R
89 0 V
-89 0 V
89 0 R
88 0 V
-88 0 V
88 0 R
88 0 V
-88 0 V
88 0 R
0 1 V
89 0 V
0 -1 V
-89 0 V
89 0 R
0 6 V
88 0 V
0 -6 V
-88 0 V
88 0 R
0 10 V
88 0 V
0 -10 V
-88 0 V
88 0 R
0 30 V
89 0 V
0 -30 V
-89 0 V
89 0 R
0 61 V
88 0 V
0 -61 V
-88 0 V
88 0 R
0 137 V
88 0 V
0 -137 V
-88 0 V
88 0 R
0 246 V
89 0 V
0 -246 V
-89 0 V
89 0 R
0 437 V
88 0 V
0 -437 V
-88 0 V
88 0 R
0 704 V
88 0 V
0 -704 V
-88 0 V
88 0 R
0 1090 V
88 0 V
0 -1090 V
-88 0 V
88 0 R
0 1545 V
89 0 V
0 -1545 V
-89 0 V
89 0 R
0 2063 V
stroke
3455 2603 M
88 0 V
0 -2063 V
-88 0 V
88 0 R
0 2594 V
88 0 V
0 -2594 V
-88 0 V
88 0 R
0 3086 V
89 0 V
0 -3086 V
-89 0 V
89 0 R
0 3436 V
88 0 V
0 -3436 V
-88 0 V
88 0 R
0 3613 V
88 0 V
0 -3613 V
-88 0 V
88 0 R
0 3539 V
89 0 V
0 -3539 V
-89 0 V
89 0 R
0 3337 V
88 0 V
0 -3337 V
-88 0 V
88 0 R
0 2921 V
88 0 V
0 -2921 V
-88 0 V
88 0 R
0 2387 V
89 0 V
0 -2387 V
-89 0 V
89 0 R
0 1827 V
88 0 V
0 -1827 V
-88 0 V
88 0 R
0 1327 V
88 0 V
0 -1327 V
-88 0 V
88 0 R
0 877 V
89 0 V
0 -877 V
-89 0 V
89 0 R
0 534 V
88 0 V
0 -534 V
-88 0 V
88 0 R
0 294 V
88 0 V
0 -294 V
-88 0 V
88 0 R
0 144 V
89 0 V
0 -144 V
-89 0 V
89 0 R
0 65 V
88 0 V
0 -65 V
-88 0 V
88 0 R
0 25 V
88 0 V
0 -25 V
-88 0 V
88 0 R
0 8 V
89 0 V
0 -8 V
-89 0 V
89 0 R
0 2 V
88 0 V
0 -2 V
-88 0 V
88 0 R
0 1 V
88 0 V
0 -1 V
-88 0 V
88 0 R
89 0 V
-89 0 V
89 0 R
88 0 V
-88 0 V
stroke
5398 540 M
88 0 V
-88 0 V
88 0 R
88 0 V
-88 0 V
88 0 R
89 0 V
-89 0 V
89 0 R
88 0 V
-88 0 V
88 0 R
88 0 V
-88 0 V
88 0 R
89 0 V
-89 0 V
89 0 R
88 0 V
-88 0 V
88 0 R
88 0 V
-88 0 V
88 0 R
89 0 V
-89 0 V
89 0 R
88 0 V
-88 0 V
88 0 R
88 0 V
-88 0 V
88 0 R
89 0 V
-89 0 V
89 0 R
88 0 V
-88 0 V
88 0 R
88 0 V
-88 0 V
88 0 R
89 0 V
-89 0 V
89 0 R
88 0 V
-88 0 V
88 0 R
88 0 V
-88 0 V
88 0 R
89 0 V
-89 0 V
89 0 R
88 0 V
-88 0 V
88 0 R
88 0 V
-88 0 V
88 0 R
89 0 V
-89 0 V
89 0 R
88 0 V
-88 0 V
88 0 R
88 0 V
-88 0 V
88 0 R
89 0 V
-89 0 V
89 0 R
88 0 V
-88 0 V
1.000 UL
LTb
1026 540 M
6624 0 V
0 3780 V
-6624 0 V
0 -3780 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times
